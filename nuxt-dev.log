
> jsonforms-nuxt-app@0.1.0 dev
> nuxt dev

[nuxi] Nuxt 3.16.2 with Nitro 2.11.9

  ➜ Local:    http://localhost:3000/
  ➜ Network:  use --host to expose

  ➜ DevTools: press Shift + Option + D in the browser (v2.4.0)

✔ Vite client built in 19ms
✔ Vite server built in 211ms
[nitro] ✔ Nuxt Nitro server built in 607ms
ℹ Vite client warmed up in 1ms
ℹ Vite server warmed up in 507ms

 WARN  [Vue warn]: Vue received a Component that was made a reactive object. This can lead to unnecessary performance overhead and should be avoided by marking the component with markRaw or using shallowRef instead of ref. 
Component that was made reactive:  { name: 'LayoutRenderer',
  components:
   { DispatchRenderer:
      { name: 'DispatchRenderer',
        props: [Object],
        setup: [Function: setup],
        computed: [Object],
        render: [Function: render$2] } },
  props:
   { schema: { required: true, type: [Array] },
     uischema: { required: true, type: [Function: Object] },
     path: { required: true, type: [Function: String] },
     enabled: { required: false, type: [Function: Boolean], default: undefined },
     renderers: { required: false, type: [Function: Array], default: undefined },
     cells: { required: false, type: [Function: Array], default: undefined },
     config: { required: false, type: [Function: Object], default: undefined } },
  setup: [Function: setup],
  computed: { layoutClassObject: [Function: layoutClassObject] },
  render: [Function: render$8] } 
  at <DispatchRenderer schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] } uischema= { type: 'VerticalLayout',
  elements:
   [ { type: 'Control', scope: '#/properties/name' },
     { type: 'Control', scope: '#/properties/age' } ] } path="" > 
  at <JsonForms data= { name: 'Send email to Adrian',
  description: 'Confirm if you have passed the subject\nHereby ...',
  done: true,
  recurrence: 'Daily',
  rating: 3 } renderers= [ { renderer:
     { name: 'StringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$i] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'MultiStringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$h] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'NumberControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$g] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'IntegerControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$f] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$e] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumOneofControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$d] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DateControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$c] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DatetimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$b] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'TimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$a] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'BooleanControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$9] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LayoutRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$8] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'GroupRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$7] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       render: [Function: render$6] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationStepperRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       computed: [Object],
       render: [Function: render$5] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ObjectRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$4] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'OneOfRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$2] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumArrayRenderer',
       props: [Object],
       setup: [Function: setup],
       methods: [Object],
       render: [Function: render$1] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ArrayListRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$k] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LabelRenderer',
       props: [Object],
       setup: [Function: setup],
       render: [Function: render] },
    tester: [Function (anonymous)] } ] schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] }  ... > 
  at <Index onVnodeUnmounted=fn<onVnodeUnmounted> ref=Ref< undefined > > 
  at <RouteProvider vnode= { __v_isVNode: true,
  __v_skip: true,
  type:
   { __name: 'index',
     setup: [Function (anonymous)],
     ssrRender: [Function: _sfc_ssrRender],
     __scopeId: 'data-v-02281a80',
     __file: '/Users/admin/Downloads/jsonform-vue3/pages/index.vue' },
  props:
   { onVnodeUnmounted: [Function: onVnodeUnmounted],
     ref:
      RefImpl {
        dep: [Dep],
        __v_isRef: true,
        __v_isShallow: false,
        _rawValue: undefined,
        _value: undefined } },
  key: null,
  ref:
   { i:
      { uid: 5,
        vnode: [Object],
        type: [Object],
        parent: [Object],
        appContext: [Object],
        root: [Object],
        next: null,
        subTree: [Object],
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function (anonymous)],
        proxy: [Object],
        exposed: null,
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [Array],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: false,
        ctx: [Object],
        data: {},
        props: [Object],
        attrs: {},
        slots: [Object],
        refs: {},
        setupState: {},
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null },
     r:
      RefImpl {
        dep: [Dep],
        __v_isRef: true,
        __v_isShallow: false,
        _rawValue: undefined,
        _value: undefined },
     k: undefined,
     f: false },
  scopeId: null,
  slotScopeIds: null,
  children: null,
  component: null,
  suspense: null,
  ssContent: null,
  ssFallback: null,
  dirs: null,
  transition: null,
  el: null,
  anchor: null,
  target: null,
  targetStart: null,
  targetAnchor: null,
  staticCount: 0,
  shapeFlag: 4,
  patchFlag: 0,
  dynamicProps: null,
  dynamicChildren: null,
  appContext: null,
  ctx:
   <ref *1> {
     uid: 5,
     vnode:
      { __v_isVNode: true,
        __v_skip: true,
        type: [Object],
        props: [Object],
        key: null,
        ref: null,
        scopeId: null,
        slotScopeIds: null,
        children: [Object],
        component: [Circular *1],
        suspense: null,
        ssContent: null,
        ssFallback: null,
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetStart: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag: 36,
        patchFlag: 0,
        dynamicProps: null,
        dynamicChildren: null,
        appContext: null,
        ctx: [Object] },
     type:
      { name: 'RouterView',
        inheritAttrs: false,
        props: [Object],
        compatConfig: [Object],
        setup: [Function: setup] },
     parent:
      { uid: 4,
        vnode: [Object],
        type: [Object],
        parent: [Object],
        appContext: [Object],
        root: [Object],
        next: null,
        subTree: [Object],
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function (anonymous)],
        proxy: [Object],
        exposed: [Object],
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [Array],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: false,
        ctx: [Object],
        data: {},
        props: [Object],
        attrs: {},
        slots: {},
        refs: {},
        setupState: {},
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null },
     appContext:
      { app: [Object],
        config: [Object],
        mixins: [],
        components: [Object],
        directives: {},
        provides: [Object: null prototype],
        optionsCache: [WeakMap],
        propsCache: [WeakMap],
        emitsCache: [WeakMap] },
     root:
      <ref *2> {
        uid: 0,
        vnode: [Object],
        type: [Object],
        parent: null,
        appContext: [Object],
        root: [Circular *2],
        next: null,
        subTree: null,
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function: NOOP],
        proxy: {},
        exposed: {},
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: undefined,
        ctx: {},
        data: {},
        props: {},
        attrs: {},
        slots: {},
        refs: {},
        setupState: [Object],
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: [Array],
        sp: null,
        devtoolsRawSetupState: [Object] },
     next: null,
     subTree:
      { __v_isVNode: true,
        __v_skip: true,
        type: [Object],
        props: [Object],
        key: null,
        ref: null,
        scopeId: null,
        slotScopeIds: null,
        children: [Object],
        component: null,
        suspense: null,
        ssContent: [Object],
        ssFallback: [Object],
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetStart: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag: 160,
        patchFlag: 0,
        dynamicProps: null,
        dynamicChildren: null,
        appContext: null,
        ctx: [Object] },
     effect: null,
     update: null,
     job: null,
     scope:
      EffectScope {
        detached: true,
        _active: true,
        effects: [],
        cleanups: [],
        _isPaused: false,
        parent: undefined },
     render: [Function (anonymous)],
     proxy: { name: [Getter/Setter], route: [Getter/Setter] },
     exposed: null,
     exposeProxy: null,
     withProxy: null,
     provides:
      Object <Object <Complex prototype>> {
        [Symbol(router view depth)]: [ComputedRefImpl],
        [Symbol(router view location matched)]: [ComputedRefImpl],
        [Symbol(router view location)]: [ComputedRefImpl] },
     ids: [ '', 0, 0 ],
     accessCache: [Object: null prototype] {},
     renderCache: [],
     components: null,
     directives: null,
     propsOptions: [ [Object], [Array] ],
     emitsOptions: null,
     emit: [Function: bound emit],
     emitted: null,
     propsDefaults: [Object: null prototype] {},
     inheritAttrs: false,
     ctx: { name: [Getter/Setter], route: [Getter/Setter] },
     data: {},
     props: { route: undefined, name: 'default' },
     attrs: {},
     slots: { default: [Function] },
     refs: {},
     setupState: {},
     setupContext: { attrs: [Getter], slots: [Getter], emit: [Getter], expose: [Function: expose] },
     suspense: null,
     suspenseId: 0,
     asyncDep: null,
     asyncResolved: false,
     isMounted: false,
     isUnmounted: false,
     isDeactivated: false,
     bc: null,
     c: null,
     bm: null,
     m: null,
     bu: null,
     u: null,
     um: null,
     bum: null,
     da: null,
     a: null,
     rtg: null,
     rtc: null,
     ec: null,
     sp: null } } route= { fullPath: '/',
  hash: '',
  query: {},
  name: 'index',
  path: '/',
  params: {},
  matched:
   [ { path: '/',
       redirect: undefined,
       name: 'index',
       meta: {},
       aliasOf: undefined,
       beforeEnter: undefined,
       props: [Object],
       children: [],
       instances: {},
       leaveGuards: Set(0) {},
       updateGuards: Set(0) {},
       enterCallbacks: {},
       components: [Object] } ],
  meta: {},
  redirectedFrom: undefined,
  href: '/' } vnodeRef=Ref< undefined > > 
  at <RouterView name=undefined route=undefined > 
  at <NuxtPage> 
  at <NuxtLayoutProvider layoutProps= { ref:
   RefImpl {
     dep:
      Dep {
        computed: undefined,
        version: 0,
        activeLink: undefined,
        subs: undefined,
        map: undefined,
        key: undefined,
        sc: 0,
        subsHead: undefined },
     __v_isRef: true,
     __v_isShallow: false,
     _rawValue: undefined,
     _value: undefined } } key="default" name="default"  ... > 
  at <NuxtLayout > 
  at <App> 
  at <NuxtRoot>


 WARN  [Vue warn]: Vue received a Component that was made a reactive object. This can lead to unnecessary performance overhead and should be avoided by marking the component with markRaw or using shallowRef instead of ref. 
Component that was made reactive:  { name: 'StringControlRenderer',
  components:
   { ControlWrapper:
      { name: 'ControlWrapper',
        props: [Object],
        computed: [Object],
        render: [Function: render$j] } },
  props:
   { schema: { required: true, type: [Array] },
     uischema: { required: true, type: [Function: Object] },
     path: { required: true, type: [Function: String] },
     enabled: { required: false, type: [Function: Boolean], default: undefined },
     renderers: { required: false, type: [Function: Array], default: undefined },
     cells: { required: false, type: [Function: Array], default: undefined },
     config: { required: false, type: [Function: Object], default: undefined } },
  setup: [Function: setup],
  render: [Function: render$i] } 
  at <DispatchRenderer schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] } uischema= { type: 'Control', scope: '#/properties/name' } path=""  ... > 
  at <LayoutRenderer renderers= [ { renderer:
     { name: 'StringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$i] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'MultiStringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$h] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'NumberControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$g] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'IntegerControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$f] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$e] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumOneofControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$d] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DateControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$c] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DatetimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$b] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'TimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$a] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'BooleanControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$9] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LayoutRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$8] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'GroupRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$7] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       render: [Function: render$6] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationStepperRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       computed: [Object],
       render: [Function: render$5] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ObjectRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$4] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'OneOfRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$2] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumArrayRenderer',
       props: [Object],
       setup: [Function: setup],
       methods: [Object],
       render: [Function: render$1] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ArrayListRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$k] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LabelRenderer',
       props: [Object],
       setup: [Function: setup],
       render: [Function: render] },
    tester: [Function (anonymous)] } ] cells= [] schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] }  ... > 
  at <DispatchRenderer schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] } uischema= { type: 'VerticalLayout',
  elements:
   [ { type: 'Control', scope: '#/properties/name' },
     { type: 'Control', scope: '#/properties/age' } ] } path="" > 
  at <JsonForms data= { name: 'Send email to Adrian',
  description: 'Confirm if you have passed the subject\nHereby ...',
  done: true,
  recurrence: 'Daily',
  rating: 3 } renderers= [ { renderer:
     { name: 'StringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$i] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'MultiStringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$h] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'NumberControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$g] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'IntegerControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$f] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$e] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumOneofControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$d] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DateControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$c] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DatetimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$b] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'TimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$a] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'BooleanControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$9] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LayoutRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$8] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'GroupRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$7] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       render: [Function: render$6] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationStepperRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       computed: [Object],
       render: [Function: render$5] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ObjectRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$4] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'OneOfRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$2] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumArrayRenderer',
       props: [Object],
       setup: [Function: setup],
       methods: [Object],
       render: [Function: render$1] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ArrayListRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$k] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LabelRenderer',
       props: [Object],
       setup: [Function: setup],
       render: [Function: render] },
    tester: [Function (anonymous)] } ] schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] }  ... > 
  at <Index onVnodeUnmounted=fn<onVnodeUnmounted> ref=Ref< undefined > > 
  at <RouteProvider vnode= { __v_isVNode: true,
  __v_skip: true,
  type:
   { __name: 'index',
     setup: [Function (anonymous)],
     ssrRender: [Function: _sfc_ssrRender],
     __scopeId: 'data-v-02281a80',
     __file: '/Users/admin/Downloads/jsonform-vue3/pages/index.vue' },
  props:
   { onVnodeUnmounted: [Function: onVnodeUnmounted],
     ref:
      RefImpl {
        dep: [Dep],
        __v_isRef: true,
        __v_isShallow: false,
        _rawValue: undefined,
        _value: undefined } },
  key: null,
  ref:
   { i:
      { uid: 5,
        vnode: [Object],
        type: [Object],
        parent: [Object],
        appContext: [Object],
        root: [Object],
        next: null,
        subTree: [Object],
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function (anonymous)],
        proxy: [Object],
        exposed: null,
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [Array],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: false,
        ctx: [Object],
        data: {},
        props: [Object],
        attrs: {},
        slots: [Object],
        refs: {},
        setupState: {},
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null },
     r:
      RefImpl {
        dep: [Dep],
        __v_isRef: true,
        __v_isShallow: false,
        _rawValue: undefined,
        _value: undefined },
     k: undefined,
     f: false },
  scopeId: null,
  slotScopeIds: null,
  children: null,
  component: null,
  suspense: null,
  ssContent: null,
  ssFallback: null,
  dirs: null,
  transition: null,
  el: null,
  anchor: null,
  target: null,
  targetStart: null,
  targetAnchor: null,
  staticCount: 0,
  shapeFlag: 4,
  patchFlag: 0,
  dynamicProps: null,
  dynamicChildren: null,
  appContext: null,
  ctx:
   <ref *1> {
     uid: 5,
     vnode:
      { __v_isVNode: true,
        __v_skip: true,
        type: [Object],
        props: [Object],
        key: null,
        ref: null,
        scopeId: null,
        slotScopeIds: null,
        children: [Object],
        component: [Circular *1],
        suspense: null,
        ssContent: null,
        ssFallback: null,
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetStart: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag: 36,
        patchFlag: 0,
        dynamicProps: null,
        dynamicChildren: null,
        appContext: null,
        ctx: [Object] },
     type:
      { name: 'RouterView',
        inheritAttrs: false,
        props: [Object],
        compatConfig: [Object],
        setup: [Function: setup] },
     parent:
      { uid: 4,
        vnode: [Object],
        type: [Object],
        parent: [Object],
        appContext: [Object],
        root: [Object],
        next: null,
        subTree: [Object],
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function (anonymous)],
        proxy: [Object],
        exposed: [Object],
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [Array],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: false,
        ctx: [Object],
        data: {},
        props: [Object],
        attrs: {},
        slots: {},
        refs: {},
        setupState: {},
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null },
     appContext:
      { app: [Object],
        config: [Object],
        mixins: [],
        components: [Object],
        directives: {},
        provides: [Object: null prototype],
        optionsCache: [WeakMap],
        propsCache: [WeakMap],
        emitsCache: [WeakMap] },
     root:
      <ref *2> {
        uid: 0,
        vnode: [Object],
        type: [Object],
        parent: null,
        appContext: [Object],
        root: [Circular *2],
        next: null,
        subTree: null,
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function: NOOP],
        proxy: {},
        exposed: {},
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: undefined,
        ctx: {},
        data: {},
        props: {},
        attrs: {},
        slots: {},
        refs: {},
        setupState: [Object],
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: [Array],
        sp: null,
        devtoolsRawSetupState: [Object] },
     next: null,
     subTree:
      { __v_isVNode: true,
        __v_skip: true,
        type: [Object],
        props: [Object],
        key: null,
        ref: null,
        scopeId: null,
        slotScopeIds: null,
        children: [Object],
        component: null,
        suspense: null,
        ssContent: [Object],
        ssFallback: [Object],
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetStart: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag: 160,
        patchFlag: 0,
        dynamicProps: null,
        dynamicChildren: null,
        appContext: null,
        ctx: [Object] },
     effect: null,
     update: null,
     job: null,
     scope:
      EffectScope {
        detached: true,
        _active: true,
        effects: [],
        cleanups: [],
        _isPaused: false,
        parent: undefined },
     render: [Function (anonymous)],
     proxy: { name: [Getter/Setter], route: [Getter/Setter] },
     exposed: null,
     exposeProxy: null,
     withProxy: null,
     provides:
      Object <Object <Complex prototype>> {
        [Symbol(router view depth)]: [ComputedRefImpl],
        [Symbol(router view location matched)]: [ComputedRefImpl],
        [Symbol(router view location)]: [ComputedRefImpl] },
     ids: [ '', 0, 0 ],
     accessCache: [Object: null prototype] {},
     renderCache: [],
     components: null,
     directives: null,
     propsOptions: [ [Object], [Array] ],
     emitsOptions: null,
     emit: [Function: bound emit],
     emitted: null,
     propsDefaults: [Object: null prototype] {},
     inheritAttrs: false,
     ctx: { name: [Getter/Setter], route: [Getter/Setter] },
     data: {},
     props: { route: undefined, name: 'default' },
     attrs: {},
     slots: { default: [Function] },
     refs: {},
     setupState: {},
     setupContext: { attrs: [Getter], slots: [Getter], emit: [Getter], expose: [Function: expose] },
     suspense: null,
     suspenseId: 0,
     asyncDep: null,
     asyncResolved: false,
     isMounted: false,
     isUnmounted: false,
     isDeactivated: false,
     bc: null,
     c: null,
     bm: null,
     m: null,
     bu: null,
     u: null,
     um: null,
     bum: null,
     da: null,
     a: null,
     rtg: null,
     rtc: null,
     ec: null,
     sp: null } } route= { fullPath: '/',
  hash: '',
  query: {},
  name: 'index',
  path: '/',
  params: {},
  matched:
   [ { path: '/',
       redirect: undefined,
       name: 'index',
       meta: {},
       aliasOf: undefined,
       beforeEnter: undefined,
       props: [Object],
       children: [],
       instances: {},
       leaveGuards: Set(0) {},
       updateGuards: Set(0) {},
       enterCallbacks: {},
       components: [Object] } ],
  meta: {},
  redirectedFrom: undefined,
  href: '/' } vnodeRef=Ref< undefined > > 
  at <RouterView name=undefined route=undefined > 
  at <NuxtPage> 
  at <NuxtLayoutProvider layoutProps= { ref:
   RefImpl {
     dep:
      Dep {
        computed: undefined,
        version: 0,
        activeLink: undefined,
        subs: undefined,
        map: undefined,
        key: undefined,
        sc: 0,
        subsHead: undefined },
     __v_isRef: true,
     __v_isShallow: false,
     _rawValue: undefined,
     _value: undefined } } key="default" name="default"  ... > 
  at <NuxtLayout > 
  at <App> 
  at <NuxtRoot>


 WARN  [Vue warn]: Invalid prop: type check failed for prop "id". Expected String with value "undefined", got Undefined  
  at <ControlWrapper id=undefined description="Please enter your name" errors=""  ... > 
  at <StringControlRenderer renderers= [ { renderer:
     { name: 'StringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$i] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'MultiStringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$h] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'NumberControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$g] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'IntegerControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$f] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$e] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumOneofControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$d] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DateControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$c] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DatetimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$b] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'TimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$a] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'BooleanControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$9] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LayoutRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$8] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'GroupRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$7] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       render: [Function: render$6] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationStepperRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       computed: [Object],
       render: [Function: render$5] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ObjectRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$4] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'OneOfRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$2] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumArrayRenderer',
       props: [Object],
       setup: [Function: setup],
       methods: [Object],
       render: [Function: render$1] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ArrayListRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$k] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LabelRenderer',
       props: [Object],
       setup: [Function: setup],
       render: [Function: render] },
    tester: [Function (anonymous)] } ] cells= [] schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] }  ... > 
  at <DispatchRenderer schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] } uischema= { type: 'Control', scope: '#/properties/name' } path=""  ... > 
  at <LayoutRenderer renderers= [ { renderer:
     { name: 'StringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$i] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'MultiStringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$h] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'NumberControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$g] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'IntegerControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$f] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$e] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumOneofControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$d] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DateControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$c] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DatetimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$b] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'TimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$a] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'BooleanControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$9] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LayoutRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$8] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'GroupRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$7] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       render: [Function: render$6] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationStepperRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       computed: [Object],
       render: [Function: render$5] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ObjectRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$4] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'OneOfRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$2] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumArrayRenderer',
       props: [Object],
       setup: [Function: setup],
       methods: [Object],
       render: [Function: render$1] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ArrayListRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$k] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LabelRenderer',
       props: [Object],
       setup: [Function: setup],
       render: [Function: render] },
    tester: [Function (anonymous)] } ] cells= [] schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] }  ... > 
  at <DispatchRenderer schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] } uischema= { type: 'VerticalLayout',
  elements:
   [ { type: 'Control', scope: '#/properties/name' },
     { type: 'Control', scope: '#/properties/age' } ] } path="" > 
  at <JsonForms data= { name: 'Send email to Adrian',
  description: 'Confirm if you have passed the subject\nHereby ...',
  done: true,
  recurrence: 'Daily',
  rating: 3 } renderers= [ { renderer:
     { name: 'StringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$i] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'MultiStringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$h] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'NumberControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$g] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'IntegerControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$f] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$e] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumOneofControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$d] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DateControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$c] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DatetimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$b] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'TimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$a] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'BooleanControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$9] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LayoutRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$8] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'GroupRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$7] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       render: [Function: render$6] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationStepperRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       computed: [Object],
       render: [Function: render$5] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ObjectRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$4] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'OneOfRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$2] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumArrayRenderer',
       props: [Object],
       setup: [Function: setup],
       methods: [Object],
       render: [Function: render$1] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ArrayListRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$k] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LabelRenderer',
       props: [Object],
       setup: [Function: setup],
       render: [Function: render] },
    tester: [Function (anonymous)] } ] schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] }  ... > 
  at <Index onVnodeUnmounted=fn<onVnodeUnmounted> ref=Ref< undefined > > 
  at <RouteProvider vnode= { __v_isVNode: true,
  __v_skip: true,
  type:
   { __name: 'index',
     setup: [Function (anonymous)],
     ssrRender: [Function: _sfc_ssrRender],
     __scopeId: 'data-v-02281a80',
     __file: '/Users/admin/Downloads/jsonform-vue3/pages/index.vue' },
  props:
   { onVnodeUnmounted: [Function: onVnodeUnmounted],
     ref:
      RefImpl {
        dep: [Dep],
        __v_isRef: true,
        __v_isShallow: false,
        _rawValue: undefined,
        _value: undefined } },
  key: null,
  ref:
   { i:
      { uid: 5,
        vnode: [Object],
        type: [Object],
        parent: [Object],
        appContext: [Object],
        root: [Object],
        next: null,
        subTree: [Object],
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function (anonymous)],
        proxy: [Object],
        exposed: null,
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [Array],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: false,
        ctx: [Object],
        data: {},
        props: [Object],
        attrs: {},
        slots: [Object],
        refs: {},
        setupState: {},
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null },
     r:
      RefImpl {
        dep: [Dep],
        __v_isRef: true,
        __v_isShallow: false,
        _rawValue: undefined,
        _value: undefined },
     k: undefined,
     f: false },
  scopeId: null,
  slotScopeIds: null,
  children: null,
  component: null,
  suspense: null,
  ssContent: null,
  ssFallback: null,
  dirs: null,
  transition: null,
  el: null,
  anchor: null,
  target: null,
  targetStart: null,
  targetAnchor: null,
  staticCount: 0,
  shapeFlag: 4,
  patchFlag: 0,
  dynamicProps: null,
  dynamicChildren: null,
  appContext: null,
  ctx:
   <ref *1> {
     uid: 5,
     vnode:
      { __v_isVNode: true,
        __v_skip: true,
        type: [Object],
        props: [Object],
        key: null,
        ref: null,
        scopeId: null,
        slotScopeIds: null,
        children: [Object],
        component: [Circular *1],
        suspense: null,
        ssContent: null,
        ssFallback: null,
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetStart: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag: 36,
        patchFlag: 0,
        dynamicProps: null,
        dynamicChildren: null,
        appContext: null,
        ctx: [Object] },
     type:
      { name: 'RouterView',
        inheritAttrs: false,
        props: [Object],
        compatConfig: [Object],
        setup: [Function: setup] },
     parent:
      { uid: 4,
        vnode: [Object],
        type: [Object],
        parent: [Object],
        appContext: [Object],
        root: [Object],
        next: null,
        subTree: [Object],
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function (anonymous)],
        proxy: [Object],
        exposed: [Object],
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [Array],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: false,
        ctx: [Object],
        data: {},
        props: [Object],
        attrs: {},
        slots: {},
        refs: {},
        setupState: {},
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null },
     appContext:
      { app: [Object],
        config: [Object],
        mixins: [],
        components: [Object],
        directives: {},
        provides: [Object: null prototype],
        optionsCache: [WeakMap],
        propsCache: [WeakMap],
        emitsCache: [WeakMap] },
     root:
      <ref *2> {
        uid: 0,
        vnode: [Object],
        type: [Object],
        parent: null,
        appContext: [Object],
        root: [Circular *2],
        next: null,
        subTree: null,
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function: NOOP],
        proxy: {},
        exposed: {},
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: undefined,
        ctx: {},
        data: {},
        props: {},
        attrs: {},
        slots: {},
        refs: {},
        setupState: [Object],
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: [Array],
        sp: null,
        devtoolsRawSetupState: [Object] },
     next: null,
     subTree:
      { __v_isVNode: true,
        __v_skip: true,
        type: [Object],
        props: [Object],
        key: null,
        ref: null,
        scopeId: null,
        slotScopeIds: null,
        children: [Object],
        component: null,
        suspense: null,
        ssContent: [Object],
        ssFallback: [Object],
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetStart: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag: 160,
        patchFlag: 0,
        dynamicProps: null,
        dynamicChildren: null,
        appContext: null,
        ctx: [Object] },
     effect: null,
     update: null,
     job: null,
     scope:
      EffectScope {
        detached: true,
        _active: true,
        effects: [],
        cleanups: [],
        _isPaused: false,
        parent: undefined },
     render: [Function (anonymous)],
     proxy: { name: [Getter/Setter], route: [Getter/Setter] },
     exposed: null,
     exposeProxy: null,
     withProxy: null,
     provides:
      Object <Object <Complex prototype>> {
        [Symbol(router view depth)]: [ComputedRefImpl],
        [Symbol(router view location matched)]: [ComputedRefImpl],
        [Symbol(router view location)]: [ComputedRefImpl] },
     ids: [ '', 0, 0 ],
     accessCache: [Object: null prototype] {},
     renderCache: [],
     components: null,
     directives: null,
     propsOptions: [ [Object], [Array] ],
     emitsOptions: null,
     emit: [Function: bound emit],
     emitted: null,
     propsDefaults: [Object: null prototype] {},
     inheritAttrs: false,
     ctx: { name: [Getter/Setter], route: [Getter/Setter] },
     data: {},
     props: { route: undefined, name: 'default' },
     attrs: {},
     slots: { default: [Function] },
     refs: {},
     setupState: {},
     setupContext: { attrs: [Getter], slots: [Getter], emit: [Getter], expose: [Function: expose] },
     suspense: null,
     suspenseId: 0,
     asyncDep: null,
     asyncResolved: false,
     isMounted: false,
     isUnmounted: false,
     isDeactivated: false,
     bc: null,
     c: null,
     bm: null,
     m: null,
     bu: null,
     u: null,
     um: null,
     bum: null,
     da: null,
     a: null,
     rtg: null,
     rtc: null,
     ec: null,
     sp: null } } route= { fullPath: '/',
  hash: '',
  query: {},
  name: 'index',
  path: '/',
  params: {},
  matched:
   [ { path: '/',
       redirect: undefined,
       name: 'index',
       meta: {},
       aliasOf: undefined,
       beforeEnter: undefined,
       props: [Object],
       children: [],
       instances: {},
       leaveGuards: Set(0) {},
       updateGuards: Set(0) {},
       enterCallbacks: {},
       components: [Object] } ],
  meta: {},
  redirectedFrom: undefined,
  href: '/' } vnodeRef=Ref< undefined > > 
  at <RouterView name=undefined route=undefined > 
  at <NuxtPage> 
  at <NuxtLayoutProvider layoutProps= { ref:
   RefImpl {
     dep:
      Dep {
        computed: undefined,
        version: 0,
        activeLink: undefined,
        subs: undefined,
        map: undefined,
        key: undefined,
        sc: 0,
        subsHead: undefined },
     __v_isRef: true,
     __v_isShallow: false,
     _rawValue: undefined,
     _value: undefined } } key="default" name="default"  ... > 
  at <NuxtLayout > 
  at <App> 
  at <NuxtRoot>


 WARN  [Vue warn]: Vue received a Component that was made a reactive object. This can lead to unnecessary performance overhead and should be avoided by marking the component with markRaw or using shallowRef instead of ref. 
Component that was made reactive:  { name: 'IntegerControlRenderer',
  components:
   { ControlWrapper:
      { name: 'ControlWrapper',
        props: [Object],
        computed: [Object],
        render: [Function: render$j] } },
  props:
   { schema: { required: true, type: [Array] },
     uischema: { required: true, type: [Function: Object] },
     path: { required: true, type: [Function: String] },
     enabled: { required: false, type: [Function: Boolean], default: undefined },
     renderers: { required: false, type: [Function: Array], default: undefined },
     cells: { required: false, type: [Function: Array], default: undefined },
     config: { required: false, type: [Function: Object], default: undefined } },
  setup: [Function: setup],
  render: [Function: render$f] } 
  at <DispatchRenderer schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] } uischema= { type: 'Control', scope: '#/properties/age' } path=""  ... > 
  at <LayoutRenderer renderers= [ { renderer:
     { name: 'StringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$i] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'MultiStringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$h] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'NumberControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$g] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'IntegerControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$f] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$e] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumOneofControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$d] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DateControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$c] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DatetimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$b] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'TimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$a] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'BooleanControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$9] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LayoutRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$8] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'GroupRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$7] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       render: [Function: render$6] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationStepperRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       computed: [Object],
       render: [Function: render$5] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ObjectRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$4] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'OneOfRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$2] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumArrayRenderer',
       props: [Object],
       setup: [Function: setup],
       methods: [Object],
       render: [Function: render$1] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ArrayListRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$k] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LabelRenderer',
       props: [Object],
       setup: [Function: setup],
       render: [Function: render] },
    tester: [Function (anonymous)] } ] cells= [] schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] }  ... > 
  at <DispatchRenderer schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] } uischema= { type: 'VerticalLayout',
  elements:
   [ { type: 'Control', scope: '#/properties/name' },
     { type: 'Control', scope: '#/properties/age' } ] } path="" > 
  at <JsonForms data= { name: 'Send email to Adrian',
  description: 'Confirm if you have passed the subject\nHereby ...',
  done: true,
  recurrence: 'Daily',
  rating: 3 } renderers= [ { renderer:
     { name: 'StringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$i] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'MultiStringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$h] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'NumberControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$g] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'IntegerControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$f] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$e] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumOneofControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$d] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DateControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$c] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DatetimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$b] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'TimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$a] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'BooleanControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$9] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LayoutRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$8] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'GroupRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$7] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       render: [Function: render$6] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationStepperRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       computed: [Object],
       render: [Function: render$5] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ObjectRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$4] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'OneOfRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$2] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumArrayRenderer',
       props: [Object],
       setup: [Function: setup],
       methods: [Object],
       render: [Function: render$1] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ArrayListRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$k] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LabelRenderer',
       props: [Object],
       setup: [Function: setup],
       render: [Function: render] },
    tester: [Function (anonymous)] } ] schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] }  ... > 
  at <Index onVnodeUnmounted=fn<onVnodeUnmounted> ref=Ref< undefined > > 
  at <RouteProvider vnode= { __v_isVNode: true,
  __v_skip: true,
  type:
   { __name: 'index',
     setup: [Function (anonymous)],
     ssrRender: [Function: _sfc_ssrRender],
     __scopeId: 'data-v-02281a80',
     __file: '/Users/admin/Downloads/jsonform-vue3/pages/index.vue' },
  props:
   { onVnodeUnmounted: [Function: onVnodeUnmounted],
     ref:
      RefImpl {
        dep: [Dep],
        __v_isRef: true,
        __v_isShallow: false,
        _rawValue: undefined,
        _value: undefined } },
  key: null,
  ref:
   { i:
      { uid: 5,
        vnode: [Object],
        type: [Object],
        parent: [Object],
        appContext: [Object],
        root: [Object],
        next: null,
        subTree: [Object],
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function (anonymous)],
        proxy: [Object],
        exposed: null,
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [Array],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: false,
        ctx: [Object],
        data: {},
        props: [Object],
        attrs: {},
        slots: [Object],
        refs: {},
        setupState: {},
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null },
     r:
      RefImpl {
        dep: [Dep],
        __v_isRef: true,
        __v_isShallow: false,
        _rawValue: undefined,
        _value: undefined },
     k: undefined,
     f: false },
  scopeId: null,
  slotScopeIds: null,
  children: null,
  component: null,
  suspense: null,
  ssContent: null,
  ssFallback: null,
  dirs: null,
  transition: null,
  el: null,
  anchor: null,
  target: null,
  targetStart: null,
  targetAnchor: null,
  staticCount: 0,
  shapeFlag: 4,
  patchFlag: 0,
  dynamicProps: null,
  dynamicChildren: null,
  appContext: null,
  ctx:
   <ref *1> {
     uid: 5,
     vnode:
      { __v_isVNode: true,
        __v_skip: true,
        type: [Object],
        props: [Object],
        key: null,
        ref: null,
        scopeId: null,
        slotScopeIds: null,
        children: [Object],
        component: [Circular *1],
        suspense: null,
        ssContent: null,
        ssFallback: null,
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetStart: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag: 36,
        patchFlag: 0,
        dynamicProps: null,
        dynamicChildren: null,
        appContext: null,
        ctx: [Object] },
     type:
      { name: 'RouterView',
        inheritAttrs: false,
        props: [Object],
        compatConfig: [Object],
        setup: [Function: setup] },
     parent:
      { uid: 4,
        vnode: [Object],
        type: [Object],
        parent: [Object],
        appContext: [Object],
        root: [Object],
        next: null,
        subTree: [Object],
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function (anonymous)],
        proxy: [Object],
        exposed: [Object],
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [Array],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: false,
        ctx: [Object],
        data: {},
        props: [Object],
        attrs: {},
        slots: {},
        refs: {},
        setupState: {},
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null },
     appContext:
      { app: [Object],
        config: [Object],
        mixins: [],
        components: [Object],
        directives: {},
        provides: [Object: null prototype],
        optionsCache: [WeakMap],
        propsCache: [WeakMap],
        emitsCache: [WeakMap] },
     root:
      <ref *2> {
        uid: 0,
        vnode: [Object],
        type: [Object],
        parent: null,
        appContext: [Object],
        root: [Circular *2],
        next: null,
        subTree: null,
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function: NOOP],
        proxy: {},
        exposed: {},
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: undefined,
        ctx: {},
        data: {},
        props: {},
        attrs: {},
        slots: {},
        refs: {},
        setupState: [Object],
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: [Array],
        sp: null,
        devtoolsRawSetupState: [Object] },
     next: null,
     subTree:
      { __v_isVNode: true,
        __v_skip: true,
        type: [Object],
        props: [Object],
        key: null,
        ref: null,
        scopeId: null,
        slotScopeIds: null,
        children: [Object],
        component: null,
        suspense: null,
        ssContent: [Object],
        ssFallback: [Object],
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetStart: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag: 160,
        patchFlag: 0,
        dynamicProps: null,
        dynamicChildren: null,
        appContext: null,
        ctx: [Object] },
     effect: null,
     update: null,
     job: null,
     scope:
      EffectScope {
        detached: true,
        _active: true,
        effects: [],
        cleanups: [],
        _isPaused: false,
        parent: undefined },
     render: [Function (anonymous)],
     proxy: { name: [Getter/Setter], route: [Getter/Setter] },
     exposed: null,
     exposeProxy: null,
     withProxy: null,
     provides:
      Object <Object <Complex prototype>> {
        [Symbol(router view depth)]: [ComputedRefImpl],
        [Symbol(router view location matched)]: [ComputedRefImpl],
        [Symbol(router view location)]: [ComputedRefImpl] },
     ids: [ '', 0, 0 ],
     accessCache: [Object: null prototype] {},
     renderCache: [],
     components: null,
     directives: null,
     propsOptions: [ [Object], [Array] ],
     emitsOptions: null,
     emit: [Function: bound emit],
     emitted: null,
     propsDefaults: [Object: null prototype] {},
     inheritAttrs: false,
     ctx: { name: [Getter/Setter], route: [Getter/Setter] },
     data: {},
     props: { route: undefined, name: 'default' },
     attrs: {},
     slots: { default: [Function] },
     refs: {},
     setupState: {},
     setupContext: { attrs: [Getter], slots: [Getter], emit: [Getter], expose: [Function: expose] },
     suspense: null,
     suspenseId: 0,
     asyncDep: null,
     asyncResolved: false,
     isMounted: false,
     isUnmounted: false,
     isDeactivated: false,
     bc: null,
     c: null,
     bm: null,
     m: null,
     bu: null,
     u: null,
     um: null,
     bum: null,
     da: null,
     a: null,
     rtg: null,
     rtc: null,
     ec: null,
     sp: null } } route= { fullPath: '/',
  hash: '',
  query: {},
  name: 'index',
  path: '/',
  params: {},
  matched:
   [ { path: '/',
       redirect: undefined,
       name: 'index',
       meta: {},
       aliasOf: undefined,
       beforeEnter: undefined,
       props: [Object],
       children: [],
       instances: {},
       leaveGuards: Set(0) {},
       updateGuards: Set(0) {},
       enterCallbacks: {},
       components: [Object] } ],
  meta: {},
  redirectedFrom: undefined,
  href: '/' } vnodeRef=Ref< undefined > > 
  at <RouterView name=undefined route=undefined > 
  at <NuxtPage> 
  at <NuxtLayoutProvider layoutProps= { ref:
   RefImpl {
     dep:
      Dep {
        computed: undefined,
        version: 0,
        activeLink: undefined,
        subs: undefined,
        map: undefined,
        key: undefined,
        sc: 0,
        subsHead: undefined },
     __v_isRef: true,
     __v_isShallow: false,
     _rawValue: undefined,
     _value: undefined } } key="default" name="default"  ... > 
  at <NuxtLayout > 
  at <App> 
  at <NuxtRoot>


 WARN  [Vue warn]: Invalid prop: type check failed for prop "id". Expected String with value "undefined", got Undefined  
  at <ControlWrapper id=undefined description="Please enter your age" errors="is a required property"  ... > 
  at <IntegerControlRenderer renderers= [ { renderer:
     { name: 'StringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$i] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'MultiStringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$h] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'NumberControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$g] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'IntegerControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$f] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$e] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumOneofControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$d] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DateControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$c] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DatetimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$b] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'TimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$a] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'BooleanControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$9] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LayoutRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$8] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'GroupRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$7] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       render: [Function: render$6] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationStepperRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       computed: [Object],
       render: [Function: render$5] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ObjectRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$4] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'OneOfRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$2] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumArrayRenderer',
       props: [Object],
       setup: [Function: setup],
       methods: [Object],
       render: [Function: render$1] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ArrayListRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$k] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LabelRenderer',
       props: [Object],
       setup: [Function: setup],
       render: [Function: render] },
    tester: [Function (anonymous)] } ] cells= [] schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] }  ... > 
  at <DispatchRenderer schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] } uischema= { type: 'Control', scope: '#/properties/age' } path=""  ... > 
  at <LayoutRenderer renderers= [ { renderer:
     { name: 'StringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$i] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'MultiStringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$h] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'NumberControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$g] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'IntegerControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$f] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$e] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumOneofControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$d] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DateControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$c] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DatetimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$b] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'TimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$a] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'BooleanControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$9] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LayoutRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$8] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'GroupRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$7] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       render: [Function: render$6] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationStepperRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       computed: [Object],
       render: [Function: render$5] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ObjectRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$4] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'OneOfRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$2] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumArrayRenderer',
       props: [Object],
       setup: [Function: setup],
       methods: [Object],
       render: [Function: render$1] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ArrayListRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$k] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LabelRenderer',
       props: [Object],
       setup: [Function: setup],
       render: [Function: render] },
    tester: [Function (anonymous)] } ] cells= [] schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] }  ... > 
  at <DispatchRenderer schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] } uischema= { type: 'VerticalLayout',
  elements:
   [ { type: 'Control', scope: '#/properties/name' },
     { type: 'Control', scope: '#/properties/age' } ] } path="" > 
  at <JsonForms data= { name: 'Send email to Adrian',
  description: 'Confirm if you have passed the subject\nHereby ...',
  done: true,
  recurrence: 'Daily',
  rating: 3 } renderers= [ { renderer:
     { name: 'StringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$i] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'MultiStringControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$h] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'NumberControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$g] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'IntegerControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$f] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$e] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumOneofControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$d] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DateControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$c] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'DatetimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$b] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'TimeControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$a] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'BooleanControlRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$9] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LayoutRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$8] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'GroupRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       render: [Function: render$7] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       render: [Function: render$6] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'CategorizationStepperRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       data: [Function: data],
       computed: [Object],
       render: [Function: render$5] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ObjectRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       render: [Function: render$4] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'OneOfRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$2] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'EnumArrayRenderer',
       props: [Object],
       setup: [Function: setup],
       methods: [Object],
       render: [Function: render$1] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'ArrayListRenderer',
       components: [Object],
       props: [Object],
       setup: [Function: setup],
       computed: [Object],
       methods: [Object],
       render: [Function: render$k] },
    tester: [Function (anonymous)] },
  { renderer:
     { name: 'LabelRenderer',
       props: [Object],
       setup: [Function: setup],
       render: [Function: render] },
    tester: [Function (anonymous)] } ] schema= { type: 'object',
  properties:
   { name: { type: 'string', minLength: 3, description: 'Please enter your name' },
     age: { type: 'integer', description: 'Please enter your age' },
     gender: { type: 'string', enum: [Array], description: 'Please select your gender' } },
  required: [ 'name', 'age' ] }  ... > 
  at <Index onVnodeUnmounted=fn<onVnodeUnmounted> ref=Ref< undefined > > 
  at <RouteProvider vnode= { __v_isVNode: true,
  __v_skip: true,
  type:
   { __name: 'index',
     setup: [Function (anonymous)],
     ssrRender: [Function: _sfc_ssrRender],
     __scopeId: 'data-v-02281a80',
     __file: '/Users/admin/Downloads/jsonform-vue3/pages/index.vue' },
  props:
   { onVnodeUnmounted: [Function: onVnodeUnmounted],
     ref:
      RefImpl {
        dep: [Dep],
        __v_isRef: true,
        __v_isShallow: false,
        _rawValue: undefined,
        _value: undefined } },
  key: null,
  ref:
   { i:
      { uid: 5,
        vnode: [Object],
        type: [Object],
        parent: [Object],
        appContext: [Object],
        root: [Object],
        next: null,
        subTree: [Object],
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function (anonymous)],
        proxy: [Object],
        exposed: null,
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [Array],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: false,
        ctx: [Object],
        data: {},
        props: [Object],
        attrs: {},
        slots: [Object],
        refs: {},
        setupState: {},
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null },
     r:
      RefImpl {
        dep: [Dep],
        __v_isRef: true,
        __v_isShallow: false,
        _rawValue: undefined,
        _value: undefined },
     k: undefined,
     f: false },
  scopeId: null,
  slotScopeIds: null,
  children: null,
  component: null,
  suspense: null,
  ssContent: null,
  ssFallback: null,
  dirs: null,
  transition: null,
  el: null,
  anchor: null,
  target: null,
  targetStart: null,
  targetAnchor: null,
  staticCount: 0,
  shapeFlag: 4,
  patchFlag: 0,
  dynamicProps: null,
  dynamicChildren: null,
  appContext: null,
  ctx:
   <ref *1> {
     uid: 5,
     vnode:
      { __v_isVNode: true,
        __v_skip: true,
        type: [Object],
        props: [Object],
        key: null,
        ref: null,
        scopeId: null,
        slotScopeIds: null,
        children: [Object],
        component: [Circular *1],
        suspense: null,
        ssContent: null,
        ssFallback: null,
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetStart: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag: 36,
        patchFlag: 0,
        dynamicProps: null,
        dynamicChildren: null,
        appContext: null,
        ctx: [Object] },
     type:
      { name: 'RouterView',
        inheritAttrs: false,
        props: [Object],
        compatConfig: [Object],
        setup: [Function: setup] },
     parent:
      { uid: 4,
        vnode: [Object],
        type: [Object],
        parent: [Object],
        appContext: [Object],
        root: [Object],
        next: null,
        subTree: [Object],
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function (anonymous)],
        proxy: [Object],
        exposed: [Object],
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [Array],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: false,
        ctx: [Object],
        data: {},
        props: [Object],
        attrs: {},
        slots: {},
        refs: {},
        setupState: {},
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null },
     appContext:
      { app: [Object],
        config: [Object],
        mixins: [],
        components: [Object],
        directives: {},
        provides: [Object: null prototype],
        optionsCache: [WeakMap],
        propsCache: [WeakMap],
        emitsCache: [WeakMap] },
     root:
      <ref *2> {
        uid: 0,
        vnode: [Object],
        type: [Object],
        parent: null,
        appContext: [Object],
        root: [Circular *2],
        next: null,
        subTree: null,
        effect: null,
        update: null,
        job: null,
        scope: [EffectScope],
        render: [Function: NOOP],
        proxy: {},
        exposed: {},
        exposeProxy: null,
        withProxy: null,
        provides: [Object <Complex prototype>],
        ids: [Array],
        accessCache: [Object: null prototype] {},
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: [],
        emitsOptions: null,
        emit: [Function: bound emit],
        emitted: null,
        propsDefaults: [Object: null prototype] {},
        inheritAttrs: undefined,
        ctx: {},
        data: {},
        props: {},
        attrs: {},
        slots: {},
        refs: {},
        setupState: [Object],
        setupContext: [Object],
        suspense: null,
        suspenseId: 0,
        asyncDep: null,
        asyncResolved: false,
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: [Array],
        sp: null,
        devtoolsRawSetupState: [Object] },
     next: null,
     subTree:
      { __v_isVNode: true,
        __v_skip: true,
        type: [Object],
        props: [Object],
        key: null,
        ref: null,
        scopeId: null,
        slotScopeIds: null,
        children: [Object],
        component: null,
        suspense: null,
        ssContent: [Object],
        ssFallback: [Object],
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetStart: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag: 160,
        patchFlag: 0,
        dynamicProps: null,
        dynamicChildren: null,
        appContext: null,
        ctx: [Object] },
     effect: null,
     update: null,
     job: null,
     scope:
      EffectScope {
        detached: true,
        _active: true,
        effects: [],
        cleanups: [],
        _isPaused: false,
        parent: undefined },
     render: [Function (anonymous)],
     proxy: { name: [Getter/Setter], route: [Getter/Setter] },
     exposed: null,
     exposeProxy: null,
     withProxy: null,
     provides:
      Object <Object <Complex prototype>> {
        [Symbol(router view depth)]: [ComputedRefImpl],
        [Symbol(router view location matched)]: [ComputedRefImpl],
        [Symbol(router view location)]: [ComputedRefImpl] },
     ids: [ '', 0, 0 ],
     accessCache: [Object: null prototype] {},
     renderCache: [],
     components: null,
     directives: null,
     propsOptions: [ [Object], [Array] ],
     emitsOptions: null,
     emit: [Function: bound emit],
     emitted: null,
     propsDefaults: [Object: null prototype] {},
     inheritAttrs: false,
     ctx: { name: [Getter/Setter], route: [Getter/Setter] },
     data: {},
     props: { route: undefined, name: 'default' },
     attrs: {},
     slots: { default: [Function] },
     refs: {},
     setupState: {},
     setupContext: { attrs: [Getter], slots: [Getter], emit: [Getter], expose: [Function: expose] },
     suspense: null,
     suspenseId: 0,
     asyncDep: null,
     asyncResolved: false,
     isMounted: false,
     isUnmounted: false,
     isDeactivated: false,
     bc: null,
     c: null,
     bm: null,
     m: null,
     bu: null,
     u: null,
     um: null,
     bum: null,
     da: null,
     a: null,
     rtg: null,
     rtc: null,
     ec: null,
     sp: null } } route= { fullPath: '/',
  hash: '',
  query: {},
  name: 'index',
  path: '/',
  params: {},
  matched:
   [ { path: '/',
       redirect: undefined,
       name: 'index',
       meta: {},
       aliasOf: undefined,
       beforeEnter: undefined,
       props: [Object],
       children: [],
       instances: {},
       leaveGuards: Set(0) {},
       updateGuards: Set(0) {},
       enterCallbacks: {},
       components: [Object] } ],
  meta: {},
  redirectedFrom: undefined,
  href: '/' } vnodeRef=Ref< undefined > > 
  at <RouterView name=undefined route=undefined > 
  at <NuxtPage> 
  at <NuxtLayoutProvider layoutProps= { ref:
   RefImpl {
     dep:
      Dep {
        computed: undefined,
        version: 0,
        activeLink: undefined,
        subs: undefined,
        map: undefined,
        key: undefined,
        sc: 0,
        subsHead: undefined },
     __v_isRef: true,
     __v_isShallow: false,
     _rawValue: undefined,
     _value: undefined } } key="default" name="default"  ... > 
  at <NuxtLayout > 
  at <App> 
  at <NuxtRoot>


 WARN  [nuxt] Failed to stringify dev server logs. Received DevalueError: Cannot stringify a function. You can define your own reducer/reviver for rich types following the instructions in https://nuxt.com/docs/api/composables/use-nuxt-app#payload.

